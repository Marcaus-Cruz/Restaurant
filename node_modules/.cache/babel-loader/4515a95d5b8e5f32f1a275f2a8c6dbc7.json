{"ast":null,"code":"import _slicedToArray from\"/mnt/e/Marcaus/CSCIMain/ReactPractice/resturaunt/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"/mnt/e/Marcaus/CSCIMain/ReactPractice/resturaunt/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/mnt/e/Marcaus/CSCIMain/ReactPractice/resturaunt/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useReducer}from\"react\";import CartContext from\"./cart-context\";import{jsx as _jsx}from\"react/jsx-runtime\";var defaultCartState={items:[],totalAmount:0};var cartReducer=function cartReducer(state,action){if(action.type==='ADD_ITEM'){var updatedTotalAmount=state.totalAmount+action.item.price*action.item.amount;var existingCartItemIndex=state.items.findIndex(function(item){return item.id===action.item.id;});var existingCartItem=state.items[existingCartItemIndex];var updatedItem;var updatedItems;// concats redundant cart items\nif(existingCartItem){updatedItem=_objectSpread(_objectSpread({},existingCartItem),{},{amount:existingCartItem.amount+action.item.amount});updatedItems=_toConsumableArray(state.items);updatedItems[existingCartItemIndex]=updatedItem;}// new item in cart\nelse{updatedItem=_objectSpread({},action.item);updatedItems=state.items.concat(updatedItem);}return{items:updatedItems,totalAmount:updatedTotalAmount};}if(action.type==='REMOVE_ITEM'){var _existingCartItemIndex=state.items.findIndex(function(item){return item.id===action.id;});var _existingCartItem=state.items[_existingCartItemIndex];var _updatedTotalAmount=state.totalAmount-_existingCartItem.price;var _updatedItems;// Remove item from cart entirely\nif(_existingCartItem.amount===1){_updatedItems=state.items.filter(function(item){return item.id!==action.id;});}else{var _updatedItem=_objectSpread(_objectSpread({},_existingCartItem),{},{amount:_existingCartItem.amount-1});_updatedItems=_toConsumableArray(state.items);_updatedItems[_existingCartItemIndex]=_updatedItem;}return{items:_updatedItems,totalAmount:_updatedTotalAmount};}return defaultCartState;};// 142, 144\nvar CartProvider=function CartProvider(props){var _useReducer=useReducer(cartReducer,defaultCartState),_useReducer2=_slicedToArray(_useReducer,2),cartState=_useReducer2[0],dispatchCartAction=_useReducer2[1];var addItemToCartHandler=function addItemToCartHandler(item){dispatchCartAction({type:'ADD_ITEM',item:item});};var removeItemFromCartHandler=function removeItemFromCartHandler(id){dispatchCartAction({type:'REMOVE_ITEM',id:id});};var cartContext={items:cartState.items,totalAmount:cartState.totalAmount,addItem:addItemToCartHandler,removeItem:removeItemFromCartHandler};return/*#__PURE__*/_jsx(CartContext.Provider,{value:cartContext,children:props.children});};export default CartProvider;","map":{"version":3,"sources":["/mnt/e/Marcaus/CSCIMain/ReactPractice/resturaunt/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItem","updatedItems","concat","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\r\n\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n    if(action.type === 'ADD_ITEM'){\r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n\r\n        const existingCartItemIndex = state.items.findIndex((item) => item.id === action.item.id);\r\n        const existingCartItem = state.items[existingCartItemIndex];\r\n        let updatedItem;\r\n        let updatedItems;\r\n\r\n        // concats redundant cart items\r\n        if(existingCartItem){\r\n            updatedItem = {\r\n                ...existingCartItem,\r\n                amount: existingCartItem.amount + action.item.amount\r\n            };\r\n            updatedItems = [...state.items];\r\n            updatedItems[existingCartItemIndex] = updatedItem;\r\n        } \r\n        // new item in cart\r\n        else {\r\n            updatedItem = {...action.item};\r\n            updatedItems = state.items.concat(updatedItem);\r\n        }\r\n\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n        };\r\n    }\r\n\r\n    if (action.type === 'REMOVE_ITEM'){\r\n        const existingCartItemIndex = state.items.findIndex((item) => item.id === action.id);\r\n        const existingCartItem = state.items[existingCartItemIndex];\r\n\r\n        const updatedTotalAmount = state.totalAmount - existingCartItem.price;\r\n        let updatedItems;\r\n\r\n        // Remove item from cart entirely\r\n        if(existingCartItem.amount === 1){\r\n            updatedItems = state.items.filter(item => item.id !== action.id);\r\n        } else {\r\n            const updatedItem = {...existingCartItem,\r\n                                    amount: existingCartItem.amount - 1};\r\n            updatedItems = [...state.items];\r\n            updatedItems[existingCartItemIndex] = updatedItem;\r\n        }\r\n\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n        }\r\n    }\r\n    return defaultCartState;\r\n};\r\n\r\n// 142, 144\r\nconst CartProvider = (props) => {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n    const addItemToCartHandler = (item) => {\r\n        dispatchCartAction({type: 'ADD_ITEM', item: item});\r\n    };\r\n\r\n    const removeItemFromCartHandler = (id) => {\r\n        dispatchCartAction({type: 'REMOVE_ITEM', id: id});\r\n    };\r\n\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem: removeItemFromCartHandler,\r\n    }\r\n\r\n    return <CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n};\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}